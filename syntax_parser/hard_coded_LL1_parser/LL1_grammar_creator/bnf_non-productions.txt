------------------------- part 2 : Terminals used and their regex -------------------------------
#tokens for keywords
  key_word_int = "^int$"
  key_word_float = "^float$"
  key_word_bool = "^bool$"
  key_word_void = "^void$"
  key_word_return = "^return$"
  key_word_while = "^while$"
  key_word_if = "^if$"
  key_word_else = "^else$"
  key_word_break = "^break$"


#tokens for constants
  constant_int = "^[\+\-]{0,1}\d+$"             # integers can be signed or unsigned
  constant_float = "^[\+\-]{0,1}\d+\.{1}\d+$"   # floats can be signed or unsigned
  constant_bool = "^(true|false|TRUE|FALSE)$"
  constant_identifier ="^[a-zA-Z_][a-zA-Z0-9_]*"


#tokens for logical signs
  equivalent_to_sign = "^==$"
  inequivalent_to_sign = "^!=$"
  less_than_sign = "^<$"
  greater_than_sign = "^>$"
  greater_than_or_equal_to_sign = "^>=$"
  less_than_or_equal_to_sign = "^<=$"
  logical_NOT_sign = "^!$"
  logical_OR_sign = "^\|\|$"
  logical_AND_sign = "^&&$"

#tokens for delimiters
  semi_colon_delimiter = "^;$"
  comma_delimiter      = "^,$"
  right_rounded_bracket = "^\)$"
  left_rounded_bracket = "^\($"
  left_curly_bracket = "^\{$"
  right_curly_bracket = "^\}$"

#tokens for mathematical operators
  addition_operator = "^\+$"
  subtraction_operator = "^-$"
  division_operator = "^\/$"
  multiplication_operator = "\*$"
  modulus_operator = "^%$"
  assignment_operator= "^=$"

------------------------- end of part 2 : Terminals used and their regex  ------------------------